[[plugins]]
repo = 'ryanoasis/vim-devicons' # ファイルアイコン


[[plugins]]
repo = 'scrooloose/nerdtree' # IDEっぽいファイラ
hook_add = '''
  nnoremap <silent>sf :NERDTreeToggle<CR>
'''


[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin' # nerdtreeにGitの表示を追加


[[plugins]]
repo = '/usr/local/opt/fzf' # fzf.vimの依存関係


[[plugins]]
repo = 'junegunn/fzf.vim' # 曖昧検索
hook_add = '''
  " ripgrepで検索中、?を押すとプレビュー:
  command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview('up:60%')
  \           : fzf#vim#with_preview('right:50%:hidden', '?'),
  \   <bang>0)

  " Filesコマンドにもプレビューを出す
  command! -bang -nargs=? -complete=dir Files
    \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)

  nnoremap ,f :Files<CR>
  nnoremap ,b :Buffers<CR>
  nnoremap ,g :GFiles<CR>
  nnoremap ,l :BLines<CR>
  nnoremap ,a :Ag<CR>
  nnoremap ,k :bd<CR>
  command! FZFMru call fzf#run({
    \  'source':  v:oldfiles,
    \  'sink':    'e',
    \  'options': '-m -x +s',
    \  'down':    '40%'})
  nnoremap <Leader>r :FZFMru<CR>
'''


[[plugins]]
repo = 'tpope/vim-surround' # カッコの挿入を便利に


[[plugins]]
repo = 'airblade/vim-gitgutter' # Gitの変更を表示


[[plugins]]
repo = 'tpope/vim-repeat' # ドットによるリピートを強力にする


[[plugins]]
repo = 'tpope/vim-commentary' # gccで一気にコメントアウト


[[plugins]]
repo = 'vim-airline/vim-airline' # ステータスバーをいい感じに
hook_add = '''
  let g:airline_powerline_fonts = 1
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#buffer_idx_mode = 1
  let g:airline#extensions#whitespace#mixed_indent_algo = 1

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

'''


[[plugins]]
repo = 'vim-airline/vim-airline-themes' #vim-airlineテーマ
hook_add = '''
'''


[[plugins]]
repo = 'alvan/vim-closetag' # htmlタグを閉じてくれる
hook_add = '''
  let g:closetag_filenames = '*.html,*.vue,*.erb,*.php'
'''


[[plugins]]
repo = 'w0rp/ale' # シンタックスチェック


[[plugins]]
repo = 'Yggdroot/indentLine' # インデント見やすく


[[plugins]]
repo = 'easymotion/vim-easymotion' # 移動プラグイン


[[plugins]]
repo = 'LeafCage/yankround.vim' # Ctrl + pで過去のクリップボード参照
hook_add = '''
  nmap p <Plug>(yankround-p)
  nmap P <Plug>(yankround-P)
  nmap <C-p> <Plug>(yankround-prev)
  nmap <C-n> <Plug>(yankround-next)
  "" 履歴取得数
  let g:yankround_max_history = 50

'''


[[plugins]]
repo = 'cohama/lexima.vim' # カッコ補完


[[plugins]]
repo = 'Shougo/deoplete.nvim' # 補完

[[plugins]]
repo = 'Shougo/deoplete-lsp' # 補完をLSPと連携


[[plugins]]
repo = 'prabirshrestha/vim-lsp' # LSP


[[plugins]]
repo = 'edkolev/tmuxline.vim'
hook_add = '''
  let g:tmuxline_preset = {
    \'a'    : '#S',
    \'c'    : ['#(whoami)'],
    \'win'  : ['#I', '#W'],
    \'cwin' : ['#I', '#W', '#F'],
    \'x'    : '#(date)',
    \'y'    : ['%R', '%a', '%Y'],
    \'z'    : '#H',
    \'options' : {'status-justify':'left'}}
'''


[[plugins]]
repo = 'tpope/vim-fugitive'


[[plugins]]
repo = 'guns/xterm-color-table.vim'


[[plugins]]
repo ="kristijanhusak/defx-git"
hook_add = '''
call defx#custom#column('git', 'indicators', {
  \ 'Modified'  : '✹',
  \ 'Staged'    : '✚',
  \ 'Untracked' : '✭',
  \ 'Renamed'   : '➜',
  \ 'Unmerged'  : '═',
  \ 'Ignored'   : '☒',
  \ 'Deleted'   : '✖',
  \ 'Unknown'   : '?'
  \ })
'''

[[plugins]]
repo ="kristijanhusak/defx-icons"


[[plugins]]
repo = 'Shougo/defx.nvim'
depends = ['defx-git', 'defx-icons']
hook_add = '''
nnoremap sd :Defx<CR>
  call defx#custom#column('icon', {
        \ 'directory_icon': '▸',
        \ 'opened_icon': '▾',
        \ 'root_icon': ' ',
        \ })

  call defx#custom#column('filename', {
        \ 'min_width': 40,
        \ 'max_width': 40,
        \ })

  call defx#custom#column('mark', {
        \ 'readonly_icon': '✗',
        \ 'selected_icon': '✓',
        \ })

  call defx#custom#option('_', {
        \ 'columns': 'indent:git:icons:filename',
        \ 'show_ignored_files': 1,
        \ })

  nnoremap <silent>fi :<C-u>Defx -new `expand('%:p:h')` -search=`expand('%:p')`<CR>
  autocmd FileType defx call s:defx_my_settings()
  function! s:defx_my_settings() abort
    " Define mappings
    nnoremap <silent><buffer><expr> <CR> defx#do_action('open')
    nnoremap <silent><buffer><expr> c defx#do_action('copy')
    nnoremap <silent><buffer><expr> m defx#do_action('move')
    nnoremap <silent><buffer><expr> p defx#do_action('paste')
    nnoremap <silent><buffer><expr> l defx#do_action('open')
    nnoremap <silent><buffer><expr> s defx#do_action('open', 'vsplit')
    nnoremap <silent><buffer><expr> P defx#do_action('open', 'pedit')
    nnoremap <silent><buffer><expr> o defx#do_action('open_or_close_tree')
    nnoremap <silent><buffer><expr> N defx#do_action('new_directory')
    nnoremap <silent><buffer><expr> n defx#do_action('new_file')
    nnoremap <silent><buffer><expr> M defx#do_action('new_multiple_files')
    nnoremap <silent><buffer><expr> C defx#do_action('toggle_columns', 'mark:indent:icon:filename:type:size:time')
    nnoremap <silent><buffer><expr> S defx#do_action('toggle_sort', 'time')
    nnoremap <silent><buffer><expr> d defx#do_action('remove')
    nnoremap <silent><buffer><expr> r defx#do_action('rename')
    nnoremap <silent><buffer><expr> ! defx#do_action('execute_command')
    nnoremap <silent><buffer><expr> x defx#do_action('execute_system')
    nnoremap <silent><buffer><expr> yy defx#do_action('yank_path')
    nnoremap <silent><buffer><expr> . defx#do_action('toggle_ignored_files')
    nnoremap <silent><buffer><expr> ; defx#do_action('repeat')
    nnoremap <silent><buffer><expr> h defx#do_action('cd', ['..'])
    nnoremap <silent><buffer><expr> ~ defx#do_action('cd')
    nnoremap <silent><buffer><expr> q defx#do_action('quit')
    nnoremap <silent><buffer><expr> sd defx#do_action('quit')
    nnoremap <silent><buffer><expr> <Space> defx#do_action('toggle_select') . 'j'
    nnoremap <silent><buffer><expr> * defx#do_action('toggle_select_all')
    nnoremap <silent><buffer><expr> j line('.') == line('$') ? 'gg' : 'j'
    nnoremap <silent><buffer><expr> k line('.') == 1 ? 'G' : 'k'
    nnoremap <silent><buffer><expr> <C-l> defx#do_action('redraw')
    nnoremap <silent><buffer><expr> <C-g> defx#do_action('print')
    nnoremap <silent><buffer><expr> cd defx#do_action('change_vim_cwd')
  endfunction
'''

[[plugins]]
repo = 'Shougo/denite.nvim'


